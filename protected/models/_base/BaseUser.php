<?php

/**
 * This is the model base class for the table "{{user}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "User".
 *
 * Columns in table "{{user}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $user_id
 * @property string $username
 * @property string $password
 * @property string $name
 * @property string $company
 * @property string $email
 * @property integer $active
 * @property string $permission
 * @property string $createddate
 *
 */
abstract class BaseUser extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{user}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'User|Users', $n);
	}

	public static function representingColumn() {
		return 'username';
	}

	public function rules() {
		return array(
			array('username, password, name, email, createddate', 'required'),
			array('active', 'numerical', 'integerOnly'=>true),
			array('username, name, company, email, permission', 'length', 'max'=>255),
			array('password', 'length', 'max'=>70),
			array('company, active, permission', 'default', 'setOnEmpty' => true, 'value' => null),
			array('user_id, username, password, name, company, email, active, permission, createddate', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'user_id' => Yii::t('app', 'User'),
			'username' => Yii::t('app', 'Username'),
			'password' => Yii::t('app', 'Password'),
			'name' => Yii::t('app', 'Name'),
			'company' => Yii::t('app', 'Company'),
			'email' => Yii::t('app', 'Email'),
			'active' => Yii::t('app', 'Active'),
			'permission' => Yii::t('app', 'Permission'),
			'createddate' => Yii::t('app', 'Createddate'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('username', $this->username, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('company', $this->company, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('active', $this->active);
		$criteria->compare('permission', $this->permission, true);
		$criteria->compare('createddate', $this->createddate, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}